2018年1月7号
Qt_Player
1.准备用QT5.6 和ffmpeg来做。
2.开始学习ffmpeg。
3.开始学习音频视频编程技术（理解，使用就行）。
4.http://blog.yundiantech.com/?log=blog&id=4 ，从这篇博客开始学习，接着学习ffepeg，
先学习在编程。

音频视频技术（1）
   视频是是由一张一张的图片组成，由于人烟的的构造，连续的播放图片就会看作是视频。每秒15帧，
 一张图片1M 每秒15张就是15M，显然这样的视频太大，而且网络根本达不到15M每秒。
   于是，将图片压缩以此来减少图片的大小，视频的连续两帧到多帧的图片不会有太大区别，所以记
 录下第一张图片后便只需要对后面的图片变化之处进行记录。直到出现差别较大的图像，才会重新记录
 （这个完整的图像就叫做关键帧）。这样就可以很大程度上减小空间了。
 
上面提到的压缩专业术语叫做视频编码，目前主流的编码格式有
国际电联的H.261、H.263、H.264、H.265，
运动静止图像专家组的M-JPEG；
国际标准化组织运动图像专家组的MPEG系列标准；
此外在互联网上被广泛应用的还有Real-Networks的RealVideo；
微软公司的WMV以及Apple公司的QuickTime等。

编码格式这么多，我们应该选择哪种呢？ 经过查阅资料目前比较好的选择是H.264，因此，只需要了解H.264就行，
我们后续的项目也是全部使用H.264。H.264的细节不是三两下能说清楚的，本文不做解释（留着以后再说），这里就介绍下H.264有哪些优势：

1．低码率（Low Bit Rate）：和MPEG2和MPEG4 ASP等压缩技术相比，在同等图像质量下，采用H.264技术压缩后的数据量只有MPEG2的1/8，MPEG4的1/3。

2．高质量的图像：H.264能提供连续、流畅的高质量图像（DVD质量）。

3．容错能力强：H.264提供了解决在不稳定网络环境下容易发生的丢包等错误的必要工具。

4．网络适应性强：H.264提供了网络抽象层（Network Abstraction Layer），使得H.264的文件能容易地在不同网络上传输（例如互联网，CDMA，GPRS，WCDMA，CDMA2000等）。

5．高压缩率，H.264的压缩比达到惊人的102∶1。

H.264最大的优势是具有很高的数据压缩比率，在同等图像质量的条件下，H.264的压缩比是MPEG-2的2倍以上，
是MPEG-4的1.5～2倍。举个例子，原始文件的大小如果为88GB，采用MPEG-2压缩标准压缩后变成3.5GB，压缩比为25∶1，
而采用H.264压缩标准压缩后变为879MB，从88GB到879MB，H.264的压缩比达到惊人的102∶1。
低码率（Low Bit Rate）对H.264的高的压缩比起到了重要的作用，和MPEG-2和MPEG-4 ASP等压缩技术相比，H.264压缩技术将大大节省用户的下载时间和数据流量收费。
尤其值得一提的是，H.264在具有高压缩比的同时还拥有高质量流畅的图像，正因为如此，经过H.264压缩的视频数据，在网络传输过程中所需要的带宽更少，也更加经济


音频视频技术（2）
音频简介


    前面我们说过视频有一个每秒钟采集多少张的概念，这就叫做视频的帧率。

    和视频的帧率一样的道理，声音也有一个频率，叫做采样率。

  人对频率的识别范围是 20HZ - 20000HZ, 如果每秒钟能对声音做 20000 个采样, 回放时就足可以满足人耳的需求. 所以 22050 的采样频率是常用的, 44100已是CD音质, 超过48000的采样对人耳已经没有意义。这和电影的每秒 24 帧图片的道理差不多。


   关于音频经常见到这样的描述:44100HZ 16bit stereo 或者 22050HZ 8bit mono 等等.

   44100HZ 16bit stereo: 表示每秒钟有 44100 次采样, 采样数据用 16 位(2字节)记录, 双声道(立体声);

   22050HZ 8bit  mono: 表示每秒钟有 22050 次采样, 采样数据用 8 位(1字节)记录, 单声道;

   当然也可以有 16bit 的单声道或 8bit 的立体声, 等等。


上面的44100HZ代表的就是采样率：

所谓采样率是指：声音信号在“模→数”转换过程中单位时间内采样的次数。采样值是指每一次采样周期内声音模拟信号的积分值。

对于单声道声音文件，采样数据为八位的短整数（short int 00H-FFH）；

而对于双声道立体声声音文件，每次采样数据为一个16位的整数（int），高八位(左声道)和低八位(右声道)分别代表两个声道。

  每个采样数据记录的是振幅, 采样精度取决于储存空间的大小:

   1 字节(也就是8bit) 只能记录 256 个数, 也就是只能将振幅划分成 256 个等级;

   2 字节(也就是16bit) 可以细到 65536 个数, 这已是 CD 标准了;

   4 字节(也就是32bit) 能把振幅细分到 4294967296 个等级, 实在是没必要了.

   如果是双声道(stereo), 采样就是双份的, 文件也差不多要大一倍.

 

这样我们就可以根据一个 wav 文件的大小、采样频率和采样大小估算出一个 wav 文件的播放长度。

譬如 "Windows XP 启动.wav" 的文件长度是 424,644 字节, 它是 "22050HZ / 16bit / 立体声" 格式(这可以从其 "属性->摘要" 里看到),

那么它的每秒的传输速率(位速, 也叫比特率、取样率)是 22050*16*2 = 705600(bit/s), 换算成字节单位就是 705600/8 = 88200(字节/秒), 
播放时间：424644(总字节数) / 88200(每秒字节数) ≈ 4.8145578(秒)。

但是这还不够精确, 包装标准的 PCM 格式的 WAVE 文件(*.wav)中至少带有 42 个字节的头信息, 在计算播放时间时应该将其去掉, 
所以就有：(424644-42) / (22050*16*2/8) ≈ 4.8140816(秒). 这样就比较精确了.

关于声音文件还有一个概念: "位速", 也有叫做比特率、取样率, 譬如上面文件的位速是 705.6kbps 或 705600bps, 其中的 b 是 bit, ps 是每秒的意思;

 

压缩的音频文件常常用位速来表示, 譬如达到 CD 音质的 MP3 是: 128kbps / 44100HZ.


2. PCM数据格式

    PCM(Pulse Code Modulation)也被称为 脉码编码调制。PCM中的声音数据没有被压缩，如果是单声道的文件，采样数据按时间的先后顺序依次存入
	。(它的基本组织单位是BYTE(8bit)或WORD(16bit))。

    一般情况下，一帧PCM是由2048次采样组成的，如果是双声道的文件，采样数据按时间先后顺序交叉地存入。如图所示:

音视频编程技术（三） 开发环境搭建

QT环境的搭建

配置ffmpeg过程中出现了配置错误，程序异常结束。         待解决。  已解决。
下午六点左右配置问题解决。
1.首先现在的ffmpeg  dev版本和share版本不同一个5.7 一个5.8.
2.配置了share的环境变量。
3.dev环境还没配，现在还在项目中copy使用。   待完成。
4.基本上ffmpeg+qt可以完美运行。

音视频编程技术（五） 使用FFMPEG解码视频之保存成图片   代码得细读  未作

程序可以运行生成的图片格式为ppm（Linux的图片格式），  不能打开。  待解决，生成windows下的图片格式。







